// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// employee schema
model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  profilePic String?
  email      String   @unique
  password   String
  normalpass String
  phoneNumber String?
  whatsappNumber String?
  address String?
  birthday DateTime?
  state String?
  district String?
  tehsil String?
  village String?
  infoSource String?
  notes String?
  followUp DateTime?
  workCategory String?
  startDate DateTime?
  aadhaarNumber String?
  panNumber String?
  role       Role     @default(EMPLOYEE)
  empid      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  leads CustomerData[] @relation("UserLeads")
}


model HansUrja {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  profilePic String?
  email      String   @unique
  phoneNumber String
  whatsappNumber String?
  password   String
  address        String?
  birthday       DateTime?
  state          String?
  district       String?
  tehsil         String?
  village        String?
  infoSource    String?
  notes         String?
  followUp      DateTime?
  workCategory  String?
  startDate     DateTime?
  aadhaarNumber String?
  panNumber String?
  role       Role     @default(HANSURJAMITRA)
  hansurjaId      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

}

model CustomerData {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  customerId     String         @unique
  // this form detaisl for customer only 
  name           String
  email          String?
  phoneNumber    String
  whatsappNumber String?
  interestAreas  InterestAreas? @default(ONGRID)
  address        String?
  birthday       DateTime?
  state          String?
  district       String?
  tehsil         String?
  village        String?

  // admin can see full form
  infoSource    String?
  notes         String?
  followUp      DateTime?
  workCategory  String?
  startDate     DateTime?
  leadStage     LeadStage @default(NEW_LEAD)
  priority      Priority  @default(LOW)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relation to the user (Employee/Admin who created the lead)
  createdBy      User?   @relation("UserLeads", fields: [createdById], references: [id])
  createdById    String? @db.ObjectId
  createdByEmpId String?
  createdByHansUrjaId String?

  // Track updates
  updateHistory Json[] @default([])

  mediaFolder MediaFolder[]
}

model MediaFolder {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  folderName   String
  description  String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  // Relation to the customer
  customerData CustomerData @relation(fields: [customerId], references: [id])
  customerId  String       @db.ObjectId
  attachments  String[]
  attachmentsCount Int      @default(0)
}



enum LeadStage {
  NEW_LEAD
  IN_PROCESS
  QUALIFIED
  SITE_VISIT_SCHEDULE
  SITE_VISIT_DONE
  ESTIMATE_SENT
  NEGOTIATION
  LEAD_LOST
  ON_HOLD
  LEAD_WON
  // subsidy process
  Registration
  Application
  Feasibility
  Vendor_Selection
  Upload_Agreement
  Installation
  Inspection
  Project_Commissioning
  Subsidy_Request
  Subsidy_Disbursal
}

enum InterestAreas {
  ONGRID // ⚡ Ongrid: Low cost, no backup
  HYBRID // ⚡ Hybrid: Backup, high cost
  OFFGRID // ⚡ Off Grid: Electricity in remote areas
  KW_1 // 1 kW
  KW_2 // 2 kW
  KW_3 // 3 kW
  KW_4 // 4 kW
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Role {
  ADMIN
  EMPLOYEE
  RECEPTIONIST
  HANSURJAMITRA
}
